version: '3.7'

services:
  anti_fraud-service:
    build:
      context: ./anti_fraud-microservice
      args:
        - PORT=2010
    container_name: anti_fraud-service
    ports:
      - '2010:2010'
    environment:
      PORT: 2010
      KAFKA_HOST: kafka
      KAFKA_PORT: 29092
    networks:
      - app_network
    depends_on: [kafka]
    deploy:
      resources:
        limits:
          memory: 200M
  transaction-service:
    build:
      context: ./transaction-microservice
      args:
        - PORT=2000
    container_name: transaction-service
    ports:
      - '2000:2000'
    environment:
      PORT: 2000
      DATABASE_USERNAME: user
      DATABASE_PASSWORD: 123456
      DATABASE_HOST: host.docker.internal
      DATABASE_PORT: 5432
      DATABASE_NAME: transactions_yape
      KAFKA_HOST: kafka
      KAFKA_PORT: 29092
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      redis:
        condition: service_started

    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - app_network
    deploy:
      resources:
        limits:
          memory: 1024M
  postgres:
    image: postgres:14
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=123456
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    networks:
      - app_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - '2181:2181'
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    networks:
      - app_network
    ports:
      - '9092:9092'
  redis:
    image: redis:6.2.5
    restart: always
    ports:
      - '6379:6379'
    networks:
      - app_network
networks:
  app_network:
    driver: bridge
